#!/bin/bash

#############################
## DEFINE GLOBAL VARIABLES ##
#############################
NC='\033[0m'
RED='\033[0;31m'
#BOLDRED='\033[1;31m'
#IRED='\033[0;91m'
GREEN='\033[0;32m'
#BOLDGREEN='\033[1;32m'
MAGENTA='\033[0;35m'
BLUE='\033[0;34m'
FHATOS="${MAGENTA}F${GREEN}h${BLUE}a${RED}t${MAGENTA}O${BLUE}S${NC}"
LB="${MAGENTA}[${NC}"
RB="${MAGENTA}]${NC}"
#############################

echo -e "${FHATOS} ${MAGENTA}Development Script${NC}"
if [ -z "$FHATOS_HOME" ]; then
  echo -e " ${RED}FHATOS_HOME${NC} must be set to proceed";
  exit 1
else
  echo -e " ${GREEN}FHATOS_HOME${NC} set to ${BLUE}${FHATOS_HOME}${NC}";
  cd "${FHATOS_HOME}" || exit 1
fi

if [[ -z $1  ]]; then
  filter=" "
  echo -e " ${LB}no operation to perform${RB}"
  exit 1
else
  echo -e " ${LB}performing ${GREEN}$1${NC}${RB}"
fi

if [[ -z $2 ]]; then
  environ=" "
  platform=" "
  echo -e " ${LB}processing ${GREEN}all environments${NC}${RB}"
else
  environ="--environment $2"
  platform="$2"
  echo -e " ${LB}processing ${GREEN}$environ${NC}${RB}"
fi

if [[ -z $3  ]]; then
  filter=" "
  echo -e " ${LB}no test filtering${RB}"
else
  filter="--filter=$3"
  echo -e " ${LB}filtering tests: ${GREEN}$filter${NC}${RB}"
fi
echo -e " ${LB}current location: ${BLUE}$(pwd)${NC}${RB}"

clean_native() {
  if [[ $platform == "native" || $platform = " " ]]; then
     mv build/_deps .
     rm -rf build/
     mkdir build/
     mv _deps build/
     rm -rf docs/build/
     rm -rf test/build/
     platformio run --target clean
  fi
}

clean_esp32() {
  if [[ $platform == "esp32" || $platform == " " ]]; then
    platformio run --target clean
  fi
}

make_native() {
  if [[ $platform == "native" || $platform = " " ]]; then
    cd build || exit 1;
    cmake .. -DBUILD_TESTS=ON -DBUILD_DOCS=OFF;
    make -j8 -o1; # j8 parallel and o1 low optimization level
    cd ..;
  fi
}

make_esp32() {
  if [[ $platform == "esp32" || $platform = " " ]]; then
    platformio run ${environ}
  fi
}

test_native() {
  if [[ $platform == "native" || $platform = " " ]]; then
    make_native
    cd build/test || exit 1;
    ctest
    cd ../..
  fi
}

test_esp32() {
  if [[ $platform == "esp32" || $platform = " " ]]; then
    # platformio run --target clean
    platformio test ${environ} -v ${filter}
  fi
}

if [[ $1 == "clean" ]]; then
  clean_native
  clean_esp32
elif [[ $1 == "test" ]]; then
  test_native
  test_esp32
elif [[ $1 == "build" ]]; then
  make_native
  make_esp32
elif [[ $1 == "upload" ]]; then
  # clean_esp32
  platformio run ${environ} --target upload
else
   echo -e "usage: 
  fhat-dev {clean | test | build | upload} {esp32 | native | <empty>}
    fhat-dev clean
    fhat-dev test native
    fhat-dev build esp32
    fhat-dev upload esp32
    fhat-dev test"
fi

if [[ $? == 0 ]]; then
    echo -e "${GREEN}SUCCESS"
else
    echo -e "${RED}FAILURE"
fi