######################
####### FhatOS #######
######################

[platformio]
name = FhatOS
description = A Distributed Operating System for Embedded Microprocessors
extra_configs = .wifi.ini
boards_dir = board

[fhatos]
name = FhatOS
version = 0.1-alpha

#####################################
##### ESP32/ESP8266 BUILD FLAGS #####
#####################################

[general]
build_flags =
    -DCONFIG_COMPILER_CXX_EXCEPTIONS=1
    -DCONFIG_ESP_TASK_WDT_TIMEOUT_S=60
    -DCONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0=0
    -DCONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1=0
    -DCONFIG_BOOTLOADER_WDT_DISABLE_IN_USER_CODE=1
# -DCONFIG_ESP32_PTHREAD_TASK_PRIO_DEFAULT=1

[mmadt]
build_flags =
    -DMMADT_LANGUAGE_LEVEL=1
    -DMMADT_VERSION=2.0-alpha

[partition]
large_code = board/partition/large_code.csv

[log]
build_flags =
    -DFOS_LOGGING=TRACE
    -DCONFIG_LOG_DEFAULT_LEVEL_VERBOSE=1
    -DCONFIG_LOG_MASTER_LEVEL=1

[wifi]
build_flags =
    ${wifi.build_flags}
    -DCONFIG_WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST=1
    -DCONFIG_ESP_WIFI_ENTERPRISE_SUPPORT=0
    -DCONFIG_ESP_WIFI_SOFTAP_SUPPORT=0
    -DCONFIG_ESP_WIFI_ENABLE_WPA3_SAE=0
    -DCONFIG_SPIRAM_TRY_ALLOCATE_WIFI_LWIP=1
    -DCONFIG_LWIP_IPV6=0

[bluetooth]
build_flags =
    -DCONFIG_BT_SPP_ENABLED=1
    -DCONFIG_BT_BLUEDROID_ENABLED=1
    -DCONFIG_BT_ENABLED=1
    -DCONFIG_BT_CLASSIC_ENABLED=1

[psram]
auto_psalloc_bytes = 1
build_flags =
    -DBOARD_HAS_PSRAM=1
    -DCONFIG_SPIRAM=1
    -DCONFIG_SPIRAM_USE=1
    -DCONFIG_SPIRAM_TYPE_AUTO=1
    -DCONFIG_SPIRAM_SIZE=-1
    -DCONFIG_SPIRAM_SPEED_80M=1
    -DCONFIG_SPIRAM_BOOT_INIT=1
    -DCONFIG_SPIRAM_USE_MALLOC=1
    -DCONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=${this.auto_psalloc_bytes}
    -DCONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL=0
    -DFOS_EXTERNAL_MEMORY_LIMIT=${this.auto_psalloc_bytes}
    -DCONFIG_SPIRAM_CACHE_WORKAROUND=1
    -DCONFIG_FREERTOS_TASK_CREATE_ALLOW_EXT_MEM=1
    -mfix-esp32-psram-cache-issue
    -DFOS_PRE_PSRAM_THREAD_STACK_SIZE=16384

[memory]
build_flags =
    -DARDUINO_LOOP_STACK_SIZE=32768

[mqtt]
build_flags =
    -DCONFIG_ASYNC_TCP_MAX_ACK_TIME=5000
    -DCONFIG_ASYNC_TCP_PRIORITY=10
    -DCONFIG_ASYNC_TCP_QUEUE_SIZE=64
# force async_tcp task to be on same core as the app (default is core 0)
  #  -DCONFIG_ASYNC_TCP_RUNNING_CORE=1
# reduce the stack size (default is 16K)
    #-DCONFIG_ASYNC_TCP_STACK_SIZE=4096

[debug]
build_flags =
    -DCONFIG_ESP_SYSTEM_PANIC_GDBSTUB=1
#-DCONFIG_FREERTOS_WATCHPOINT_END_OF_STACK=1
#-DCONFIG_FREERTOS_CHECK_STACKOVERFLOW=1

######################################
##### ESP32/8266 MICROPROCESSORS #####
######################################

######################################

[common]
monitor_speed = 115200
build_unflags =
    -std=gnu++11
build_flags =
    -std=gnu++2a
    ${wifi.build_flags}
    -DFOS_SERIAL_BAUDRATE=${this.monitor_speed}
    -DUNITY_OUTPUT_COLOR
    -DUNITY_INCLUDE_PRINT_FORMATTED
    -mtext-section-literals
    -DFOS_NAME=${fhatos.name}
    -DFOS_VERSION=${fhatos.version}
    -DFOS_MACHINE_ARCH=$PIOENV
    -DFOS_MACHINE_MODEL=$BOARD
    -DFOS_MACHINE_SUBOS=$PIOFRAMEWORK/$PIOPLATFORM
    -DFMT_HEADER_ONLY
    -DCONFIG_LITTLEFS_FOR_IDF_3_2
    -DMQTT_MAX_PACKET_SIZE=512

######################################

[esp32]
platform = espressif32@6.10.0
framework = arduino
#build_type = debug
#upload_flags = --no-stub
upload_speed = 921600
platform_packages =
    tool-esp32partitiontool@https://github.com/serifpersia/esp32partitiontool/releases/download/v1.4.4/esp32partitiontool-platformio.zip
extra_scripts =
    ${env.extra_scripts}
    pre:scripts/rename_elf.py
    pre:scripts/partition_manager.py
# pre:scripts/fs_mount.py

monitor_speed = ${common.monitor_speed}
monitor_dir = scripts
monitor_filters =
    ${env.monitor_filters}
    esp32_exception_decoder
    debug
lib_ignore =
    ESP8266Scheduler
test_framework = doctest
test_speed = ${this.monitor_speed}
test_build_src = true
test_build_project_src = true
test_upload = true
test_filter = test_furi_2
test_ignore =
    test_main
    test/test_basic.cpp
    test_basic.cpp
    structure/test_furi_boost
    structure/stype/mqtt/test_mqtt
    model/test_fs
build_src_filter =
    +<**/*>
    -<../test/test_basic.cpp>
    -<../test/structure/test_furi_boost.cpp>
build_unflags =
#-fno-rtti
    ${common.build_unflags}
build_flags =
    ${common.build_flags}
    ${general.build_flags}
    ${debug.build_flags}
#${log.build_flags}
    ${mmadt.build_flags}
    ${wifi.build_flags}
    ${memory.build_flags}
    ${mqtt.build_flags}
    -DARDUINO_USB_CDC_ON_BOOT=1



# default 65536
###############################
####### HEAP DEBUGGING ########
###############################
#-DCONFIG_HEAP_TRACING_DEST=1

[esp8266]
platform = espressif826
board = ${boards.esp8266.d1_mini}
upload_speed = 512000
monitor_speed = ${common.monitor_speed}
test_speed = ${this.monitor_speed}
monitor_filters =
    ${env.monitor_filters}
    esp8266_exception_decoder
build_unflags =
    ${common.build_unflags}
build_flags =
    ${common.build_flags}

[boards]
esp8266.d1_mini = d1_mini
esp8266.nodemcuv2 = nodemcuv2
esp32.d1_mini = wemos_d1_mini32
esp32.c3_super_mini = seeed_xiao_esp32c3
esp32.s2 = esp32s2box
esp32.s2_mini = lolin_s2_mini
esp32.s3 = esp32s3box
esp32.s3_mini = esp32-s3-devkitc-1

######################################
########## ROOT ENVIRONMENT ##########
######################################

[env]
framework = arduino
board_build.filesystem = littlefs
#fs_mount_src = mmadt/common.mmadt
#fs_mount_dst = data/fs/model/
extra_scripts =
    pre:scripts/environment.py
    pre:scripts/exclude_native_source.py
lib_deps =
    WiFi
    ArduinoOTA
    Update
    ESPmDNS
    FS
    littlefs
    extern/fmt-arduino-10.1.1
    ESP32Async/AsyncTCP@^3.4.4
    bertmelis/espMqttClient@^1.7.0
extends = serial # ota

[serial]
upload_protocol = esptool

[ota]
upload_protocol = espota
upload_port = 192.168.10.149

###########################################
################## ESP32 ##################
###########################################
[env:esp32-s2-mini]
extends = esp32
upload_flags = --no-stub
board = lolin_s2_mini
board_build.partitions = ${partition.large_code}
board_upload.flash_size = 4MB
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}

###########################################
###########################################
[env:esp32-s3-pro]
extends = esp32
board = lolin_s3_pro
board_upload.flash_size = 16MB
board_build.partitions = board/partition/large_code_16mb.csv
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}
#${bluetooth.build_flags}

###########################################
###########################################
[env:esp32-s3-r8]
extends = esp32
board = waveshare_esp32s3r8
board_upload.flash_size = 16MB
upload_flags = --no-stub
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}

###########################################
###########################################
[env:esp32-s3-mini]
extends = esp32
board = lolin_s3_mini
board_build.partitions = ${partition.large_code}
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}

###########################################
###########################################
[env:esp32-t7-s3]
extends = esp32
board = lilygo_t7_s3
board_build.partitions = board/partition/large_code_16mb.csv
board_upload.flash_size = 16MB
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}
#${bluetooth.build_flags}

###########################################
###########################################
[env:esp32-s3-geek]
extends = esp32
board = waveshare_esp32s3_geek
board_upload.flash_size = 4MB
build_flags =
    ${esp32.build_flags}
    ${psram.build_flags}

###########################################
############ RASBERRY PI ZERO #############
###########################################

# USE fhat-dev

############################################
################## NATIVE ##################
############################################

# USE fhat-dev